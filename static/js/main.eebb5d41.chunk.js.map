{"version":3,"sources":["images/bg.jpg","service/api.js","components/Information.jsx","components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","city","country","a","axios","get","useStyle","makeStyles","component","margin","row","padding","fontSize","fontWeight","value","color","icons","Info","data","classes","Box","className","Typography","name","sys","main","temp","humidity","Date","sunrise","toLocaleTimeString","sunset","weather","clouds","all","display","background","input","marginRight","button","width","height","marginTop","Form","useState","getWeatherData","setCity","setCountry","click","handleClick","useEffect","getWeather","then","response","console","log","TextField","onChange","e","target","inputProps","label","variant","Button","onClick","Information","useStyles","alignItems","leftContainer","backgroundImage","logo","backgroundSize","borderRadius","rightContainer","Weather","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAe,MAA0B,+B,oECI5BA,EAAO,uCAAG,WAAMC,EAAKC,GAAX,SAAAC,EAAA,sEACRC,IAAMC,IAAN,UAHH,kDAGG,cAAsBJ,EAAtB,YAA8BC,EAA9B,kBAFC,mCAED,kBADQ,mFAAH,wD,uICKdI,EAAWC,YAAW,CACxBC,UAAU,CACNC,OAAQ,QAEZC,IAAI,CACAC,QAAS,OACTC,SAAU,OACVC,WAAY,QAEhBC,MAAM,CACFC,MAAM,QAEVC,MAAM,CACFP,OAAQ,EACRM,MAAO,aAoBAE,EAhBF,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAETC,EAAUb,IACd,OACIY,EACF,eAACE,EAAA,EAAD,CAAKC,UAAWF,EAAQX,UAAxB,UACI,eAACc,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAgBW,UAAWF,EAAQH,QAAvE,aAAyF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiDU,EAAKK,KAAtD,KAA8DL,EAAKM,IAAItB,cAChK,eAACoB,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAwBW,UAAWF,EAAQH,QAA/E,gBAAoG,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiDU,EAAKO,KAAKC,KAA3D,kBACpG,eAACJ,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAaW,UAAWF,EAAQH,QAApE,aAAsF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiDU,EAAKO,KAAKE,SAA3D,UACtF,eAACL,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAiBW,UAAWF,EAAQH,QAAxE,YAAyF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiD,IAAIoB,KAAsB,IAAjBV,EAAKM,IAAIK,SAAcC,qBAAjF,UACzF,eAACR,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAiBW,UAAWF,EAAQH,QAAxE,YAAyF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiD,IAAIoB,KAAqB,IAAhBV,EAAKM,IAAIO,QAAaD,qBAAhF,UACzF,eAACR,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAYW,UAAWF,EAAQH,QAAnE,aAAqF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiDU,EAAKc,QAAQ,GAAGP,KAAjE,UACrF,eAACH,EAAA,EAAD,CAAYD,UAAWF,EAAQT,IAA/B,UAAoC,cAAC,IAAD,CAAWW,UAAWF,EAAQH,QAAlE,WAAkF,eAACI,EAAA,EAAD,CAAKC,UAAWF,EAAQL,MAAON,UAAU,OAAzC,UAAiDU,EAAKe,OAAOC,IAA7D,aAC9E,ICnCN5B,EAAWC,YAAW,CAC1BC,UAAW,CACTG,QAAS,GACTwB,QAAS,OACTC,WAAY,WAEdC,MAAO,CACLtB,MAAO,OACPuB,YAAa,IAEfC,OAAQ,CACNH,WAAY,UACZrB,MAAO,OACPyB,MAAO,IACPC,OAAQ,GACRC,UAAW,KAwDAC,EArDF,WACX,IAAMxB,EAAUb,IAEhB,EAA+BsC,qBAA/B,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAO3C,EAAP,KAAa6C,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAO1C,EAAP,KAAgB6C,EAAhB,KACA,EAA4BH,oBAAS,GAArC,mBAAOI,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,sBAAAhD,EAAA,8DACjBF,GADiB,qCACHD,EAAQC,EAAMC,GAASkD,MAAK,SAACC,GACzCR,EAAeQ,EAASnC,MACxBoC,QAAQC,IAAIF,EAASnC,SAHN,2CAAH,qDAMhBiC,IACAF,GAAY,KACX,CAACD,IAOJ,OACE,qCACE,eAAC5B,EAAA,EAAD,CAAKC,UAAWF,EAAQX,UAAxB,UACE,cAACgD,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAVQ5C,EAUgB4C,EAAEC,OAAO7C,WATjDgC,EAAQhC,GADe,IAACA,GAWlBO,UAAWF,EAAQkB,MACnBuB,WAAY,CAAEvC,UAAWF,EAAQkB,OACjCwB,MAAM,OACNC,QAAQ,aAEV,cAACN,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAdW5C,EAcgB4C,EAAEC,OAAO7C,WAbpDiC,EAAWjC,GADe,IAACA,GAerB8C,WAAY,CAAEvC,UAAWF,EAAQkB,OACjChB,UAAWF,EAAQkB,MACnBwB,MAAM,UACNC,QAAQ,aAEV,cAACC,EAAA,EAAD,CACAC,QAAS,kBAAIf,GAAY,IACxB5B,UAAWF,EAAQoB,OAClBxB,MAAM,UACL+C,QAAQ,YAJX,4BAQF,cAACG,EAAD,CAAa/C,KAAMA,QCpEnBgD,EAAY3D,YAAW,CAC3BC,UAAW,CACTiC,OAAQ,QACRN,QAAS,OACTgC,WAAY,SACZ3B,MAAO,MACP/B,OAAQ,UAEV2D,cAAe,CACbC,gBAAgB,OAAD,OAASC,EAAT,KACf7B,OAAQ,MACRD,MAAO,MACP+B,eAAgB,QAChBC,aAAc,iBAEhBC,eAAgB,CACdrC,WAAY,4CACZK,OAAQ,MACRD,MAAO,SAeIkC,EAXC,WACd,IAAMvD,EAAU+C,IAChB,OACE,eAAC9C,EAAA,EAAD,CAAKC,UAAWF,EAAQX,UAAxB,UACE,cAACY,EAAA,EAAD,CAAKC,UAAWF,EAAQiD,gBACxB,cAAChD,EAAA,EAAD,CAAKC,UAAWF,EAAQsD,eAAxB,SACE,cAAC,EAAD,UCxBOE,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.eebb5d41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.9c811a51.jpg\";","import axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"9be5f8140a6cb0c8e51b6d417d632bb0\";\r\nexport const getData = async(city,country) => {\r\n  return await axios.get(`${URL}?q=${city},${country}&appid=${API_KEY}&units=metric`);\r\n};\r\n","import { Box ,Typography,makeStyles} from \"@material-ui/core\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness'\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5'\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6'\r\nimport DehazeIcon from '@material-ui/icons/Dehaze'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\n\r\nconst useStyle = makeStyles({\r\n    component:{\r\n        margin: '50px'\r\n    },\r\n    row:{\r\n        padding: '10px',\r\n        fontSize: '25px',\r\n        fontWeight: 'bold'\r\n    },\r\n    value:{\r\n        color:'#fff'\r\n    },\r\n    icons:{\r\n        margin: 5,\r\n        color: 'darkred'\r\n    }\r\n})\r\n\r\nconst Info = ({data}) => {\r\n\r\nconst classes = useStyle();\r\n  return(\r\n      data ?\r\n    <Box className={classes.component}>\r\n        <Typography className={classes.row}><LocationOnIcon className={classes.icons}/>Location: <Box className={classes.value} component=\"span\">{data.name}, {data.sys.country}</Box></Typography>\r\n        <Typography className={classes.row}><SettingsBrightnessIcon className={classes.icons}/>Temperature: <Box className={classes.value} component=\"span\">{data.main.temp} Celcius </Box></Typography>\r\n        <Typography className={classes.row}><OpacityIcon className={classes.icons}/>Humidity: <Box className={classes.value} component=\"span\">{data.main.humidity}%</Box></Typography>\r\n        <Typography className={classes.row}><Brightness5Icon className={classes.icons}/>Sunrise: <Box className={classes.value} component=\"span\">{new Date(data.sys.sunrise*1000).toLocaleTimeString()} </Box></Typography>\r\n        <Typography className={classes.row}><Brightness6Icon className={classes.icons}/> Sunset: <Box className={classes.value} component=\"span\">{new Date(data.sys.sunset*1000).toLocaleTimeString()} </Box></Typography>\r\n        <Typography className={classes.row}><DehazeIcon className={classes.icons}/>Condition:<Box className={classes.value} component=\"span\">{data.weather[0].main} </Box></Typography>\r\n        <Typography className={classes.row}><CloudIcon className={classes.icons}/>Clouds: <Box className={classes.value} component=\"span\">{data.clouds.all}%</Box></Typography>\r\n    </Box>: ''\r\n  );\r\n};\r\nexport default Info;\r\n","import { Box, makeStyles, TextField, Button } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getData } from \"../service/api.js\";\r\nimport Information from \"./Information\";\r\n\r\nconst useStyle = makeStyles({\r\n  component: {\r\n    padding: 10,\r\n    display: \"flex\",\r\n    background: \"#445A6F\",\r\n  },\r\n  input: {\r\n    color: \"#fff\",\r\n    marginRight: 15,\r\n  },\r\n  button: {\r\n    background: \"#e67e22\",\r\n    color: \"#fff\",\r\n    width: 150,\r\n    height: 40,\r\n    marginTop: 5,\r\n  },\r\n});\r\nconst Form = () => {\r\n  const classes = useStyle();\r\n\r\n  const [data, getWeatherData] = useState();\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [click,handleClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getWeather = async () => {\r\n      city && await getData(city, country).then((response) => {\r\n        getWeatherData(response.data);\r\n        console.log(response.data);\r\n      });\r\n    };\r\n    getWeather();\r\n    handleClick(false);\r\n  }, [click]);\r\n  const handleCityChange = (value) => {\r\n    setCity(value);\r\n  };\r\n  const handleCountryChange = (value) => {\r\n    setCountry(value);\r\n  };\r\n  return (\r\n    <>\r\n      <Box className={classes.component}>\r\n        <TextField\r\n          onChange={(e) => handleCityChange(e.target.value)}\r\n          className={classes.input}\r\n          inputProps={{ className: classes.input }}\r\n          label=\"City\"\r\n          variant=\"standard\"\r\n        />\r\n        <TextField\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n          inputProps={{ className: classes.input }}\r\n          className={classes.input}\r\n          label=\"Country\"\r\n          variant=\"standard\"\r\n        />\r\n        <Button\r\n        onClick={()=>handleClick(true)}\r\n         className={classes.button}\r\n          color=\"primary\"\r\n           variant=\"contained\">\r\n          Get Weather\r\n        </Button>\r\n      </Box>\r\n      <Information data={data} />\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport logo from \"../images/bg.jpg\";\r\nimport Form from \"./Form\";\r\n\r\nconst useStyles = makeStyles({\r\n  component: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"65%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  leftContainer: {\r\n    backgroundImage: `url(${logo})`,\r\n    height: \"80%\",\r\n    width: \"30%\",\r\n    backgroundSize: \"cover\",\r\n    borderRadius: \"20px 0 0 20px\",\r\n  },\r\n  rightContainer: {\r\n    background: \"linear-gradient(to right,#e74c3c,#e67e22)\",\r\n    height: \"80%\",\r\n    width: \"70%\",\r\n  },\r\n});\r\n\r\nconst Weather = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.component}>\r\n      <Box className={classes.leftContainer}></Box>\r\n      <Box className={classes.rightContainer}>\r\n        <Form />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default Weather;\r\n","import Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <Weather/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}